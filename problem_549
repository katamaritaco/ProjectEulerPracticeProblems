/*Problem 549 - Divisibility of factorials

The smallest number m such that 10 divides m! is m=5.
The smallest number m such that 25 divides m! is m=10.

Let s(n) be the smallest number m such that n divides m!.
So s(10)=5 and s(25)=10.
Let S(n) be ∑s(i) for 2 ≤ i ≤ n.
S(100)=2012.

Find S(10**8).
*/

/*TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO 

Thoughts:
Brute it: 
do a bunch of calculations (1 - 1000000000000?) for m! and store them in a list.
  This can be done by doing currElemOfList = prevElemOfList * currentNum++
for each i, find s(i) by checking remainder(mod) of m[1],...,m[a lot] % i
  if it is legit, then add it to the sum.
  Can probably optimize a bit by figuring out which elems at the start to ignore, since after a while some will be clearly useless. might not be too important.

'Smarter' way:
since s(25) = 10, does that mean s(50) and s(75), ... equal 10 if m! is > i?

Other thoughts:
Once you get a huge list of m! values, for each of those values, find a list of factors. 
Then, go through those lists in order, checking off the 'i' value in a masterList(2,...,10**8) for each first occurence. 

//TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO */


package main

import "fmt"

func main() {
    fmt.Printf( "hello, world!\n" );
}
